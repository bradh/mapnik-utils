#labels Featured
== nik2img.py ==

A lightweight command line utility to take a mapnik xml file as input and output an image.

Mirrors the usefulness of the Mapserver [http://mapserver.gis.umn.edu/docs/reference/utilityreference/shp2img shp2img] utility. Not all of the shp2img functionality is currently supported, but all is planned.

=== Usage ===

{{{
$ nik2img.py -h

===========================================================================
Usage: /usr/local/bin/nik2img.py -m <mapnik.xml> -o <image.png>
Option  Default         Description
-m      <required>      Mapfile: Path to xml map file to load styles from.
-o      <required>      Image: Set the output filename (or a directory name - with no .ext*)
-i      [png]           Format: Choose the output format: png, png256, jpeg, or all (will loop through all formats)
-e      [max extent]    Minx,Miny,Maxx,Maxy: Set map extent in geographic (lon/lat) coordinates*
-r      [max extent]    Minx,Miny,Maxx,Maxy: Set map extent in projected coordinates of mapfile*
-s      [600,300]       Width,Height: Set the image size in pixels
-p      [mapfile srs]   Reproject using epsg, proj4 string, or url 'ie -p http://spatialreference.org/ref/user/6/'*
-l      [all enabled]   Set layers to enable (quote and comma-separate if several)
-t      [0]             Pause n seconds after reading the map
-z      [10]            N number of zoom levels generate graphics for*
-h      [off]           Prints this usage information

---------------------------------------------------------------------------
 * Additional features in nik2img not part of shp2img
 Note: nik2img does not support sending image to STDOUT (default in shp2img)
===========================================================================
Dane Springmeyer, dbsgeo (a-t) gmail.com


}}}

=== Usage Example ===
Output an 8-bit png image:
{{{
$ python nik2img.py -m mapfile.xml -o mapnik_image.png -i png256
}}}

Loop through outputting all possible image formats (and generating maps with a custom size):
{{{
$ python nik2img.py -m mapfile.xml -o mapnik_image -i all -s 700,400
}}}

General all image formats within a folder in spherical mercator projection with custom bbox in projected coordinates and pause 2 seconds after reading mapfile:
{{{
$ python nik2img.py -m mapfile.xml -o yourmapsfolder -i all -p epsg:900913 -r 1003750,-1706377,10037508,2810502 -t 2
}}}